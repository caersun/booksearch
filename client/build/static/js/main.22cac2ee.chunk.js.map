{"version":3,"sources":["components/NavBar.js","components/Jumbo.js","utils/API.js","components/SavedBook.js","pages/Saved/index.js","components/SearchResult.js","pages/Search/index.js","App.js","index.js"],"names":["NavBar","Navbar","color","light","expand","NavbarBrand","href","Nav","NavLink","Jumbo","Jumbotron","fluid","Container","className","API","searchBook","query","url","console","log","axios","get","getSavedBooks","saveBook","bookData","post","deleteBook","id","delete","SavedBook","book","Card","CardBody","CardTitle","tag","title","CardSubtitle","authors","CardText","description","Button","onClick","_id","then","window","location","reload","Saved","useState","saved","setSaved","useEffect","res","data","catch","err","length","map","savedBook","key","SearchResult","volumeInfo","image","imageLinks","thumbnail","link","previewLink","Search","books","setBooks","queryRef","useRef","Form","onSubmit","event","preventDefault","current","value","items","FormGroup","Label","for","Input","innerRef","type","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.22cac2ee.chunk.js","sourcesContent":["// import { useState } from \"react\";\r\nimport { Navbar, NavbarBrand, Nav, NavLink } from  \"reactstrap\";\r\n\r\nfunction NavBar() {\r\n    return <Navbar color=\"light\" light expand=\"md\">\r\n        <NavbarBrand href=\"/\">Google Book Search</NavbarBrand>\r\n            <Nav>\r\n                <NavLink href=\"/\">Search</NavLink>\r\n                <NavLink href=\"/saved\">Saved</NavLink>\r\n            </Nav>\r\n    </Navbar>\r\n};\r\n\r\nexport default NavBar;","import { Jumbotron, Container } from \"reactstrap\";\r\n\r\nfunction Jumbo() {\r\n    return <Jumbotron fluid>\r\n        <Container fluid>\r\n            <h1 className=\"display-3\">Search Gooogle Books</h1>\r\n            <p className=\"lead\">Search the Google Books API for books that interest you and save them!</p>\r\n        </Container>\r\n    </Jumbotron>\r\n};\r\n\r\nexport default Jumbo;","import axios from \"axios\";\r\n\r\nconst API = {\r\n    searchBook: (query) => {\r\n        const url = \"https://www.googleapis.com/books/v1/volumes?q=\" + query;\r\n        console.log(\"searching url:\", url);\r\n        return axios.get(url);\r\n    },\r\n    getSavedBooks: () => {\r\n        return axios.get(\"/api/books\");\r\n    },\r\n    saveBook: (bookData) => {\r\n        return axios.post(\"/api/books\", bookData);\r\n    },\r\n    deleteBook: (id) => {\r\n        return axios.delete(\"/api/books/\" + id);\r\n    }\r\n    \r\n};\r\n\r\nexport default API;","import { Button, Card, CardBody, CardTitle, CardSubtitle, CardText } from \"reactstrap\";\r\nimport API from \"../utils/API\";\r\n\r\nfunction SavedBook({ book }) {\r\n    const deleteBook = () => {\r\n        API.deleteBook(book._id).then(window.location.reload());\r\n    };\r\n\r\n    return <Card>\r\n                <CardBody>\r\n                    <CardTitle tag=\"h5\">{book.title}</CardTitle>\r\n                    <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">Author(s): {book.authors}</CardSubtitle>\r\n                    <CardText>{book.description}</CardText>\r\n                    <Button>View</Button>\r\n                    <Button onClick={() => deleteBook()}>Delete</Button>\r\n                </CardBody>\r\n            </Card>\r\n};\r\n\r\nexport default SavedBook;","import React, { useState, useEffect } from \"react\";\r\nimport { Container } from \"reactstrap\";\r\nimport SavedBook from \"../../components/SavedBook\";\r\nimport API from \"../../utils/API\";\r\n\r\nfunction Saved() {\r\n  const [saved, setSaved] = useState([]);\r\n\r\n  useEffect(() => {\r\n    loadSaved();\r\n  }, []);\r\n\r\n  function loadSaved() {\r\n    API.getSavedBooks()\r\n      .then((res) => {\r\n          console.log(\"Currently saved:\", res.data);\r\n          setSaved(res.data);\r\n        })\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <h6>Saved Books</h6>\r\n      {saved.length ? (\r\n        saved.map((savedBook, key) => {\r\n          return <SavedBook key={key} book={savedBook} />;\r\n        })\r\n      ) : (\r\n        <h3>Search for some books, save them, and they will appear here!</h3>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Saved;\r\n","import { Button, Card, CardBody, CardTitle, CardSubtitle, CardText } from \"reactstrap\";\r\nimport API from \"../utils/API\";\r\n\r\nfunction SearchResult({ book }) {\r\n    // console.log(\"incoming query for\", book);\r\n    // TODO: Need to active/inactive buttons once saved\r\n\r\n    const saveBook = () => {\r\n        API.saveBook({\r\n            title: book.volumeInfo.title,\r\n            authors: book.volumeInfo.authors,\r\n            description: book.volumeInfo.description,\r\n            image: book.volumeInfo.imageLinks.thumbnail,\r\n            link: book.volumeInfo.previewLink\r\n        });\r\n        API.getSavedBooks().then(saved => console.log(\"saved\", saved));\r\n    };\r\n\r\n    return <Card>\r\n            <CardBody>\r\n                <CardTitle tag=\"h5\">{book.volumeInfo.title}</CardTitle>\r\n                {/* TODO: Fix multiple authors to show with comma */}\r\n                <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">Author(s): {book.volumeInfo.authors}</CardSubtitle>\r\n                <CardText>{book.volumeInfo.description}</CardText>\r\n                <Button>View</Button>\r\n                <Button onClick={() => saveBook()}>Save</Button>\r\n            </CardBody>\r\n        </Card>\r\n};\r\n\r\nexport default SearchResult;","import { Container, Form, FormGroup, Label, Input, Button } from \"reactstrap\";\r\nimport React, { useState, useRef } from \"react\";\r\nimport SearchResult from \"../../components/SearchResult\";\r\nimport API from \"../../utils/API\";\r\n\r\nfunction Search() {\r\n    const [books, setBooks] = useState([]);\r\n    const queryRef = useRef();\r\n\r\n    function bookSearch(event) {\r\n        event.preventDefault();\r\n        API.searchBook(queryRef.current.value)\r\n            .then(data => setBooks(data.data.items))\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n    return <Container>\r\n                <Form onSubmit={bookSearch}>\r\n                    <FormGroup>\r\n                        <Label for=\"search\">Search</Label>\r\n                        <Input \r\n                            // reactstrap uses innerRef to acces DOM instead of ref\r\n                            innerRef={queryRef} \r\n                            id=\"search\" />\r\n                    </FormGroup>\r\n                    <Button type=\"submit\">Search</Button>\r\n                </Form>\r\n                <h6>Results</h6>\r\n                {books.length ? (\r\n                    books.map((book, key) => { \r\n                        return <SearchResult key={key} book={book} /> \r\n                    })) : (\r\n                    <h3>No results to display</h3>\r\n                )}\r\n    </Container>;\r\n};\r\n\r\nexport default Search;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport NavBar from \"./components/NavBar\";\nimport Jumbo from \"./components/Jumbo\";\nimport Saved from \"./pages/Saved\";\nimport Search from \"./pages/Search\";\n\nfunction App() {\n  return (\n    <Router>\n      <NavBar />\n      <Jumbo />\n      <Switch>\n        <Route exact path=\"/\">\n          <Search />\n        </Route>\n        <Route exact path=\"/saved\">\n          <Saved />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n// import $ from 'jquery';\n// import Popper from 'popper.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import 'bootstrap/dist/js/bootstrap.min.js';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}